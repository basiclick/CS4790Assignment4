@model PagedList.IPagedList<CS4790Assignment4.Models.Fruit>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Fruit";
}

<h2 class="text-warning text-center">Nine Fruits FruitDB</h2>

<p>

    @Html.ActionLink("Create New", "Create")

   
</p>

@using (Html.BeginForm("Index", "Fruits", FormMethod.Get))// overRide to get instead of default post
{ <p>
        Search by FruitTitle or Contributor: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p> }
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Fruit Title", "Index", new { sortOrder = ViewBag.TitleSortParm }) 
        </th>
        <th>
            @Html.ActionLink("Contributor", "Index", new { sortOrder = ViewBag.ContSortParm })
        </th>
        <th>
            @Html.ActionLink("Popularity", "Index", new { sortOrder = ViewBag.PopularitySortParm })
        </th>
        <th>
           Price
        </th>
        <th>
           Fruit Picture
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FruitTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Contributor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Popularity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                <img class="img-responsive img-rounded img-thumbnail" src="@Html.DisplayFor(modelItem => item.FruitPic)" />
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.FruitID }) |
                @Html.ActionLink("Details", "Details", new { id = item.FruitID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.FruitID })
            </td>
        </tr>
    }

</table>
<br/>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
